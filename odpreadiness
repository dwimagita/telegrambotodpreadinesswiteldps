var token = "TOKENBOT"; // merupakan token dari bot yang dibuat
var telegramUrl = "https://api.telegram.org/bot" + token; //API dari telegram
var webAppUrl = "URLWEBSITE"; //webAppURL script yang sedang dibuat.
var ss = SpreadsheetApp.openById("IDSHEET"); //Id dari file spreadsheet yang ingin di hubungkan dengan telegram bot.
var sheet = ss.getSheetByName("ODP LIST"); //nama sheet yang akan dihubungkan untuk diambil datanya.

function getMe() {
  var url = telegramUrl + "/getMe";
  var response = UrlFetchApp.fetch(url);
  Logger.log(response.getContentText());
}
function setWebhook(){ //fungsi untuk mengatur aplikasi web sebagai server bot
  var url = telegramUrl + "/setWebhook?url=" + webAppUrl;
  var response = UrlFetchApp.fetch(url);
  Logger.log(response.getContentText());
}
function sendText(id,text) { //fungsi untuk mengirim pesan pada user
  var url = telegramUrl + "/sendMessage?chat_id=" + id + "&text=" + text;
  var response = UrlFetchApp.fetch(url);
  Logger.log(response.getContentText());
}
function sendLocation(id,latitude,longitude){ // fungsi untuk mengirim lokasi pada user
  var url = telegramUrl + "/sendLocation?chat_id=" + id + "&latitude=" + latitude + "&longitude=" + longitude;
  var response = UrlFetchApp.fetch(url);
  Logger.log(response.getContentText());
}
function doGet(e){ //untuk tampilan web dan tracing output
  var sql = "SELECT  ND, ND_REFERENCE, NAMA, ADDRESS FROM " + "19lB-7KkU0u5s8DCSuD-OYx-IdWK5f0tfqb_INkiE" + " WHERE STP_TARGET LIKE '%ODP-KUT-FAQ/02%' AND SERVICE_TYPE='Voice'";
  var csv = FusionTables.Query.sqlGet(sql,{hdrs : false}); 
  var s = csv.rows;
  return HtmlService.createHtmlOutput(s);
}


function doPost(e) { 
  // this is where telegram works
  var data = JSON.parse(e.postData.contents); //mengambil konten dan mengubah menjadi JSON
  var text = data.message.text; //mendapatkan pesan dari user
  var id = data.message.chat.id; //mendapatkan id dari user yang mengirimkan pesan
  
  if (text == "/start"){ // kondisi jika user mengirimkan pesan /start
    
    var id = data.message.chat.id;
    var name = data.message.chat.first_name + " " + data.message.chat.last_name; //untuk mendapatkan nama dari user yang mengirimkan pesan ke bot.
    var message = "Selamat datang " + name + " !" + "%0AUntuk mencari data pelanggan silahkan memasukkan /ODP_NAME%0AContoh : /ODP-UBN-FAC/100%0A%0AUntuk mengetahui pelanggann yang tersambung dengan odp masukkan /pelanggan_ODP_NAME %0AContoh : /pelanggan_ODP-UBN-FAC/100";
    sendText(id,message);
    
  }else if(text.indexOf("/")>=0){ //jika dalam text terdapat "/" maka lanjutkan
    var odp = text.slice(1); //menghapus karakter pertama dari variable text
    var rows = sheet.getRange(1,1,sheet.getLastRow(), sheet.getLastColumn()).getValues(); //mengambil semua data dari google sheet
    
    for(var i = 0 ; i < rows.length; i++){ //perulangan untuk mencari data sesuai pesan  yang dikirimkan, beserta mengambil data dari kolom yang diinginkan
      var sto  = rows[i][1];
      var pdname  = rows[i][2];
      var odpname  = rows[i][3];
      var odpindex  = rows[i][4];
      var latitudes  = rows[i][5];
      var longitudes  = rows[i][6];
      var isavai  = rows[i][7];
      var isblocking  = rows[i][8];
      var isothers  = rows[i][9];
      var isreserv  = rows[i][10];
      var isservice  = rows[i][11];
      var istotal  = rows[i][12];
      var gponname  = rows[i][13];
      var ipne  = rows[i][14];
      var modul  = rows[i][15];
      var port  = rows[i][16];
      var occ  = rows[i][17];
      var stat  = rows[i][18];
      var odc  = rows[i][19];
      var readinessont  = rows[i][20];
      var qrcode  = rows[i][25];
      var hasil = "BERIKUT DATA DARI ODP_NAME : " + odpname + "%0A %0A"  + "~ STO : " + sto + "%0A" + "~ PD_NAME : " + pdname + "%0A" + "~ ODP_INDEX : " + odpindex + "%0A" + "~ LATITUDE : " + latitudes + "%0A" + "~ LONGITUDE : " + longitudes + "%0A" + "~ IS_AVAI : " + isavai + "%0A" + "~ IS_BLOCKING : " + isblocking + "%0A" + "~ IS_OTHERS : " + isothers + "%0A" + "~ IS_RESERV : " + isreserv + "%0A" + "~ IS_TOTAL : " + istotal + "%0A" + "~ GPON NAME : "+ gponname + "%0A" + "~ IP NE : " + ipne + "%0A" + "~ MODUL : " + modul + "%0A" + "~ PORT : " + port + "%0A" + "~ OCC : " + occ + "%0A" + "~ STAT : " + stat + "%0A" + "~ Readiness ONT : " + readinessont + "%0A" + "~ QR CODE : " + qrcode;
      
      if(odp == odpname ){ // kondisi jika pesan sama dengan yang berada dikolom ODP_NAME
        sendText(id,hasil); //mengirim hasil odp
        sendLocation(id,latitudes,longitudes); //mengirim lokasi berdasarkan latitude & longitude yang berada di sheet
        break;
      } 
    } if (text.indexOf("pelanggan")==1 ) { //kondisi dimana jika terdapat kata pelanggan pada pesan dari user
      var fusionTableDataPelanggan = 'IDFUSIONTABLE; //id fusion
      var odps = text.split("_")[1]; //mengambil pesan untuk mengambil kata setelah tanda garis bawah "_"
      var sql = "SELECT NAMA, ADDRESS, ND, ND_REFERENCE FROM " + "19lB-7KkU0u5s8DCSuD-OYx-IdWK5f0tfqb_INkiE" + " WHERE STP_TARGET LIKE '%"+odps+"%' AND SERVICE_TYPE='Voice'"; // query untuk mengambil data dari fusion table
      var csv = FusionTables.Query.sqlGet(sql,{hdrs : false, typed : true});//mengambil query untuk mendapatkan data. Fusion tables harus di aktifkan(enable) APInya terlebih dahulu pada option Resource > Advance Google Service > Fusion Table API > ON > Buka website Google API Console > search Fusion Table lalu enable 

      var data1 = csv.rows[0];
      var data2 = csv.rows[1];
      var data3 = csv.rows[2];
      var data4 = csv.rows[3];
      var data5 = csv.rows[4];
      var data6 = csv.rows[5];
      var data7 = csv.rows[6];
      var data8 = csv.rows[7];
      var data9 = csv.rows[8];
      var data10 = csv.rows[9];
      var data11 = csv.rows[10];
      var data12 = csv.rows[11];
      var data13 = csv.rows[12];
      var data14 = csv.rows[13];
      var data15 = csv.rows[14];
      var data16 = csv.rows[15];
      var data17 = csv.rows[16];
      var data18 = csv.rows[17];
      var data19 = csv.rows[18];
      var data20 = csv.rows[19];
      var data21 = csv.rows[20];
      var data22 = csv.rows[21];
      var data23 = csv.rows[22];
      var data24 = csv.rows[23];
      var data25 = csv.rows[24];
      var data26 = csv.rows[25];
      var data27 = csv.rows[26];
      var data28 = csv.rows[27];
      var data29 = csv.rows[28];
      var data30 = csv.rows[29];
      var data31 = csv.rows[30];
      var data32 = csv.rows[31];
      var data33 = csv.rows[32];
      var data34 = csv.rows[33];
      var data35 = csv.rows[34];
      var data36 = csv.rows[35]; 
      
      var pelanggan1 = "Berikut data pelanggan yang tersambung pada ODP :  "+ odps +"%0A%0A" + "1.  " + data1 +"%0A%0A"+ "2.  " + data2 +"%0A%0A" + "3.  " + data3 +"%0A%0A"+ "4.  " + data4 +"%0A%0A"+ "5.  " + data5 +"%0A%0A"+ "6.  " + data6 +"%0A%0A"+ "7.  " + data7 +"%0A%0A"+ "8.  " + data8 +"%0A%0A"+ "9.  " + data9 +"%0A%0A"+ "10.  " + data10 +"%0A%0A"+ "11.  " + data11 +"%0A%0A"+ "12.  " + data12;      
      var pelanggan2 = "13.  " + data13 +"%0A%0A"+ "14.  " + data14 +"%0A%0A"+ "15.  " + data15 +"%0A%0A"+ "16.  " + data16 +"%0A%0A"+ "17.  " + data17 +"%0A%0A"+ "18.  " + data18 +"%0A%0A"+ "19.  " + data19 +"%0A%0A"+ "20.  " + data20 +"%0A%0A"+ "21.  " + data21 +"%0A%0A"+ "22.  " + data22 +"%0A%0A"+ "23.  " + data23 +"%0A%0A"+ "24.  " + data24;
      var pelanggan3 = "25.  " + data25 +"%0A%0A"+ "26.  " + data26 +"%0A%0A"+ "27.  " + data27 +"%0A%0A"+ "28.  " + data28 +"%0A%0A"+ "29.  " + data29 +"%0A%0A"+ "30.  " + data30 +"%0A%0A"+ "31.  " + data31 +"%0A%0A"+ "32.  " + data32 +"%0A%0A"+ "33.  " + data33 +"%0A%0A"+ "34.  " + data34 +"%0A%0A"+ "35.  " + data35 +"%0A%0A"+ "36.  " + data36;
      var hasil1 = pelanggan1.replace(/&/g, "%26").replace(/amp;/g,""); //karena telegram bot tidak bisa mengirimkan beberapa symbol maka kita mengganti symbol dengan percent encode agar menampilkan symbol yang diinginkan
      var hasil2 = pelanggan2.replace(/&/g, "%26").replace(/amp;/g,"");
      var hasil3 = pelanggan3.replace(/&/g, "%26").replace(/amp;/g,"");
      
      sendText(id,hasil1);
      sendText(id,hasil2);
      sendText(id,hasil3);
      
    }else if (odp != odpname ) { // kondisi jika pesan tidak sama dengan kolom ODP_NAME
      sendText(id, "Data belum dimasukkan atau coba periksa kembali penulisan ODP.%0A/start untuk mengetahui cara menggunakan bot");
    } 
  }else{ //kondisi lain jika tidak memenuhi ketentuan-ketentuan kondisi diatas.
    sendText(id, "Masukkan /ODP_NAME untuk mengetahui informasi ODP!%0AContoh : /ODP-UBN-FAC/100 %0Aatau masukkan /pelanggan_ODP_NAME untuk mengetahui pelanggan yang terhubung ODP%0AContoh : /pelanggan_ODP-UBN-FAC/100");
  }
}     

/**
* AppsScript script untuk menjalankan dalam Google Spreadsheet yang akan mensinkronisasi
* dengan fusion table dengan mengganti semua baris.
*/
//Mengganti dengan ID tabel Fusion Anda (dari File > tentang tabel ini)
var TABLE_ID = '18emNGGhug-wywYOK0GrpvGcWo0mcUYbOr0q6GRSF';
//Baris pertama yang memiliki data, sebagai lawan dari informasi header
var FIRST_DATA_ROW = 2;
// "True" berarti spreadsheet dan tabel harus memiliki jumlah kolom yang sama
var REQUIRE_SAME_COLUMNS = true;
/**
* Menggantikan semua baris dalam tabel Fusion diidentifikasi oleh TABLE_ID dengan
* saat ini lembar data, mulai dari FIRST_DATA_ROW.
*/
function sync() { //untuk mengaktifkan function sync agar langsung melakukan update pada Google Fusion Table, kita bisa mengatur "Triggred" pada option Edit > Current Project's Triggers > add new triggers 
  var tasks = FusionTables.Task.list(TABLE_ID);
  //Hanya berjalan jika ada penghapusan tidak luar biasa atau skema perubahan.
  if (tasks.totalItems == 0) {
    var sheet = SpreadsheetApp.getActiveSheet();
    var wholeSheet = sheet.getRange(1, 1, sheet.getLastRow(),sheet.getLastColumn());
    var values = wholeSheet.getValues();
    if (values.length > 1) {
      var csvBlob = Utilities.newBlob(convertToCsv_(values),
                                      'application/octet-stream');
      FusionTables.Table.replaceRows(TABLE_ID, csvBlob,
                                     { isStrict: REQUIRE_SAME_COLUMNS, startLine: FIRST_DATA_ROW - 1 });
      Logger.log('Replaced ' + values.length + ' rows');
    }
  } else {
    Logger.log('Skipping row replacement because of ' + tasks.totalItems +
               ' active background task(s)');
  }
}
/**
* Mengkonversi nilai spreadsheet ke CSV string.
* @param {array} data nilai spreadsheet.
* @return {string} CSV string.
*/

function convertToCsv_(data) {
  var csv = '';
  for (var row = 0; row < data.length; row++) {
    for (var col = 0; col < data[row].length; col++) {
      var value = data[row][col].toString();
      if (value.indexOf(',') != -1 ||
          value.indexOf('\n') != -1 ||
        value.indexOf('"') != -1) {
          //nilai tanda kutip dengan koma, ganda kutipan atau baris
          value = '"' + value.replace(/"/g, '""') + '"';
          data[row][col] = value;
        }
    }
    //Bergabung dengan setiap baris kolom dan menambahkan sebuah carriage return akhir setiap baris
    //kecuali yang terakhir
    if (row < data.length - 1) {
      csv += data[row].join(',') + '\r\n';
    }
    else {
      csv += data[row];
    }
  }
  return csv;
}
